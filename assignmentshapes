//insert package

import javafx.application.Application;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.shape.Line;
import javafx.scene.text.Text;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Rectangle;
import javafx.scene.shape.*;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.text.Text;
import javafx.scene.Scene;

import javafx.stage.Stage;

import java.util.Random;
import java.util.ArrayList;

public class Assignment2 extends Application {

    static final int HEIGHT = 600;
    static final int WIDTH = 800;
    static final int MIN_RADIUS = 25;
    static final int MAX_RADIUS = 70;
    static final int MAX_LEN = 100;
    static final int MIN_LEN = 40;
    Pane root = new Pane();
    
    ArrayList<Shape> shapeList = new ArrayList<>();
    Random rand = new Random();
    
    public void generateShapes(int n) {
    	
    	for(int i = 0; i < n; i++){
    		
    		if(rand.nextInt(2) == 1) {
    			createCircle(i);
    		}
    		
    		else {
    			createRectangle(i);
    		}
    	}
    }
    
    public void createCircle(int i) {
    	Circle circle = new Circle(MIN_RADIUS + rand.nextInt(MAX_RADIUS - MIN_RADIUS));
    	circle.setCenterX(MAX_RADIUS + rand.nextInt(WIDTH - 2 * MAX_RADIUS));
    	circle.setCenterY(MAX_RADIUS + rand.nextInt(HEIGHT - 2 * MAX_RADIUS));
    	
    	circle.setFill(Color.rgb(rand.nextInt(255), rand.nextInt(255), rand.nextInt(255)));
    	
    	shapeList.add(circle);
    	root.getChildren().add(shapeList.get(i));
    }
    
    public void createRectangle(int i) {
    	Rectangle rectangle = new Rectangle(MIN_LEN + rand.nextInt(MAX_LEN - MIN_LEN), MIN_LEN  + rand.nextInt(MAX_LEN - MIN_LEN));
    	rectangle.setX(rand.nextInt(WIDTH - MAX_LEN));
    	rectangle.setY(rand.nextInt(HEIGHT - MAX_LEN));
    	rectangle.setFill(Color.rgb(rand.nextInt(255), rand.nextInt(255), rand.nextInt(255)));
    	
    	shapeList.add(rectangle);
    	root.getChildren().add(shapeList.get(i));
    }
    
    
    public void drawLine(Circle circle, Rectangle rectangle) {

        Line line1 = new Line(circle.getCenterX(), circle.getCenterY(), rectangle.getX() + (rectangle.getWidth() / 2),
                rectangle.getY() + (rectangle.getHeight() / 2));

        double length = Math.sqrt(Math.pow(line1.getEndX() - line1.getStartX(), 2) +
                Math.pow(line1.getEndY() - line1.getStartY(), 2));

        Text distance = new Text(String.valueOf(length));
        distance.setX((line1.getEndX() + line1.getStartX())/2);
        distance.setY((line1.getEndY() + line1.getStartY())/2);
    }

    @Override
    public void start(Stage primaryStage) {

        Label numOfShapeLabel = new Label("Number of Shapes:");
        TextField numOfShapeTextField = new TextField();
        numOfShapeTextField.setPrefWidth(30);

        HBox numOfShapeBox = new HBox(10);
        numOfShapeBox.getChildren().addAll(numOfShapeLabel, numOfShapeTextField);
        numOfShapeBox.setLayoutX(330);
        numOfShapeBox.setLayoutY(520);

        Button generateButton = new Button("Generate");
        generateButton.setLayoutX(360);
        generateButton.setLayoutY(550);
        
        generateButton.setOnAction(event -> {
        	generateShapes(Integer.parseInt(numOfShapeTextField.getText()));
        	numOfShapeBox.setVisible(false);
        	generateButton.setVisible(false);
        });

        root.getChildren().addAll(generateButton, numOfShapeBox);
        Scene scene = new Scene(root, WIDTH, HEIGHT);
        primaryStage.setScene(scene);
        primaryStage.setTitle("Assignment"); 
        primaryStage.setResizable(false);
        primaryStage.show(); 
    }
    
    /*public static boolean hasIntersection(Shape... shapes){
        //implements here


    }*/
    
    public static void main(String[] args) {
        launch(args);
    }
}
